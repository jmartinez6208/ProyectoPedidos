#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Datos
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PedidosBD")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertCategorias(Categorias instance);
    partial void UpdateCategorias(Categorias instance);
    partial void DeleteCategorias(Categorias instance);
    partial void InsertPedidos(Pedidos instance);
    partial void UpdatePedidos(Pedidos instance);
    partial void DeletePedidos(Pedidos instance);
    partial void InsertProductos(Productos instance);
    partial void UpdateProductos(Productos instance);
    partial void DeleteProductos(Productos instance);
    partial void InsertProductos_Tienda(Productos_Tienda instance);
    partial void UpdateProductos_Tienda(Productos_Tienda instance);
    partial void DeleteProductos_Tienda(Productos_Tienda instance);
    partial void InsertTiendas(Tiendas instance);
    partial void UpdateTiendas(Tiendas instance);
    partial void DeleteTiendas(Tiendas instance);
    partial void InsertTipoUsuarios(TipoUsuarios instance);
    partial void UpdateTipoUsuarios(TipoUsuarios instance);
    partial void DeleteTipoUsuarios(TipoUsuarios instance);
    partial void InsertUsuarios(Usuarios instance);
    partial void UpdateUsuarios(Usuarios instance);
    partial void DeleteUsuarios(Usuarios instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::Datos.Properties.Settings.Default.PedidosBDConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Categorias> Categorias
		{
			get
			{
				return this.GetTable<Categorias>();
			}
		}
		
		public System.Data.Linq.Table<Detalle_Pedido> Detalle_Pedido
		{
			get
			{
				return this.GetTable<Detalle_Pedido>();
			}
		}
		
		public System.Data.Linq.Table<Pedidos> Pedidos
		{
			get
			{
				return this.GetTable<Pedidos>();
			}
		}
		
		public System.Data.Linq.Table<Productos> Productos
		{
			get
			{
				return this.GetTable<Productos>();
			}
		}
		
		public System.Data.Linq.Table<Productos_Tienda> Productos_Tienda
		{
			get
			{
				return this.GetTable<Productos_Tienda>();
			}
		}
		
		public System.Data.Linq.Table<Tiendas> Tiendas
		{
			get
			{
				return this.GetTable<Tiendas>();
			}
		}
		
		public System.Data.Linq.Table<TipoUsuarios> TipoUsuarios
		{
			get
			{
				return this.GetTable<TipoUsuarios>();
			}
		}
		
		public System.Data.Linq.Table<Usuarios> Usuarios
		{
			get
			{
				return this.GetTable<Usuarios>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categorias")]
	public partial class Categorias : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nombre;
		
		private string _descripcion;
		
		private EntitySet<Productos> _Productos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    #endregion
		
		public Categorias()
		{
			this._Productos = new EntitySet<Productos>(new Action<Productos>(this.attach_Productos), new Action<Productos>(this.detach_Productos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="NVarChar(50)")]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="NVarChar(50)")]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categorias_Productos", Storage="_Productos", ThisKey="id", OtherKey="idCategoria")]
		public EntitySet<Productos> Productos
		{
			get
			{
				return this._Productos;
			}
			set
			{
				this._Productos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Productos(Productos entity)
		{
			this.SendPropertyChanging();
			entity.Categorias = this;
		}
		
		private void detach_Productos(Productos entity)
		{
			this.SendPropertyChanging();
			entity.Categorias = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Detalle_Pedido")]
	public partial class Detalle_Pedido
	{
		
		private int _idProductoTienda;
		
		private int _idPedido;
		
		private System.Nullable<int> _cantidad;
		
		private System.Nullable<double> _subtotal;
		
		private System.Nullable<char> _conseguido;
		
		public Detalle_Pedido()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProductoTienda", DbType="Int NOT NULL")]
		public int idProductoTienda
		{
			get
			{
				return this._idProductoTienda;
			}
			set
			{
				if ((this._idProductoTienda != value))
				{
					this._idProductoTienda = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPedido", DbType="Int NOT NULL")]
		public int idPedido
		{
			get
			{
				return this._idPedido;
			}
			set
			{
				if ((this._idPedido != value))
				{
					this._idPedido = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cantidad", DbType="Int")]
		public System.Nullable<int> cantidad
		{
			get
			{
				return this._cantidad;
			}
			set
			{
				if ((this._cantidad != value))
				{
					this._cantidad = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subtotal", DbType="Float")]
		public System.Nullable<double> subtotal
		{
			get
			{
				return this._subtotal;
			}
			set
			{
				if ((this._subtotal != value))
				{
					this._subtotal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_conseguido", DbType="Char(1)")]
		public System.Nullable<char> conseguido
		{
			get
			{
				return this._conseguido;
			}
			set
			{
				if ((this._conseguido != value))
				{
					this._conseguido = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pedidos")]
	public partial class Pedidos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _idCliente;
		
		private System.Nullable<int> _idRepartidor;
		
		private System.Nullable<System.DateTime> _fechaCreacion;
		
		private string _estado;
		
		private System.Nullable<double> _total;
		
		private EntityRef<Usuarios> _Usuarios;
		
		private EntityRef<Usuarios> _Usuarios1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidClienteChanging(System.Nullable<int> value);
    partial void OnidClienteChanged();
    partial void OnidRepartidorChanging(System.Nullable<int> value);
    partial void OnidRepartidorChanged();
    partial void OnfechaCreacionChanging(System.Nullable<System.DateTime> value);
    partial void OnfechaCreacionChanged();
    partial void OnestadoChanging(string value);
    partial void OnestadoChanged();
    partial void OntotalChanging(System.Nullable<double> value);
    partial void OntotalChanged();
    #endregion
		
		public Pedidos()
		{
			this._Usuarios = default(EntityRef<Usuarios>);
			this._Usuarios1 = default(EntityRef<Usuarios>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCliente", DbType="Int")]
		public System.Nullable<int> idCliente
		{
			get
			{
				return this._idCliente;
			}
			set
			{
				if ((this._idCliente != value))
				{
					if (this._Usuarios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidClienteChanging(value);
					this.SendPropertyChanging();
					this._idCliente = value;
					this.SendPropertyChanged("idCliente");
					this.OnidClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRepartidor", DbType="Int")]
		public System.Nullable<int> idRepartidor
		{
			get
			{
				return this._idRepartidor;
			}
			set
			{
				if ((this._idRepartidor != value))
				{
					if (this._Usuarios1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidRepartidorChanging(value);
					this.SendPropertyChanging();
					this._idRepartidor = value;
					this.SendPropertyChanged("idRepartidor");
					this.OnidRepartidorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechaCreacion", DbType="Date")]
		public System.Nullable<System.DateTime> fechaCreacion
		{
			get
			{
				return this._fechaCreacion;
			}
			set
			{
				if ((this._fechaCreacion != value))
				{
					this.OnfechaCreacionChanging(value);
					this.SendPropertyChanging();
					this._fechaCreacion = value;
					this.SendPropertyChanged("fechaCreacion");
					this.OnfechaCreacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estado", DbType="NVarChar(30)")]
		public string estado
		{
			get
			{
				return this._estado;
			}
			set
			{
				if ((this._estado != value))
				{
					this.OnestadoChanging(value);
					this.SendPropertyChanging();
					this._estado = value;
					this.SendPropertyChanged("estado");
					this.OnestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total", DbType="Float")]
		public System.Nullable<double> total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this.OntotalChanging(value);
					this.SendPropertyChanging();
					this._total = value;
					this.SendPropertyChanged("total");
					this.OntotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Pedidos", Storage="_Usuarios", ThisKey="idCliente", OtherKey="id", IsForeignKey=true)]
		public Usuarios Usuarios
		{
			get
			{
				return this._Usuarios.Entity;
			}
			set
			{
				Usuarios previousValue = this._Usuarios.Entity;
				if (((previousValue != value) 
							|| (this._Usuarios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuarios.Entity = null;
						previousValue.Pedidos.Remove(this);
					}
					this._Usuarios.Entity = value;
					if ((value != null))
					{
						value.Pedidos.Add(this);
						this._idCliente = value.id;
					}
					else
					{
						this._idCliente = default(Nullable<int>);
					}
					this.SendPropertyChanged("Usuarios");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Pedidos1", Storage="_Usuarios1", ThisKey="idRepartidor", OtherKey="id", IsForeignKey=true)]
		public Usuarios Usuarios1
		{
			get
			{
				return this._Usuarios1.Entity;
			}
			set
			{
				Usuarios previousValue = this._Usuarios1.Entity;
				if (((previousValue != value) 
							|| (this._Usuarios1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuarios1.Entity = null;
						previousValue.Pedidos1.Remove(this);
					}
					this._Usuarios1.Entity = value;
					if ((value != null))
					{
						value.Pedidos1.Add(this);
						this._idRepartidor = value.id;
					}
					else
					{
						this._idRepartidor = default(Nullable<int>);
					}
					this.SendPropertyChanged("Usuarios1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Productos")]
	public partial class Productos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idCategoria;
		
		private string _nombre;
		
		private System.Nullable<int> _imagen;
		
		private EntitySet<Productos_Tienda> _Productos_Tienda;
		
		private EntityRef<Categorias> _Categorias;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidCategoriaChanging(int value);
    partial void OnidCategoriaChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnimagenChanging(System.Nullable<int> value);
    partial void OnimagenChanged();
    #endregion
		
		public Productos()
		{
			this._Productos_Tienda = new EntitySet<Productos_Tienda>(new Action<Productos_Tienda>(this.attach_Productos_Tienda), new Action<Productos_Tienda>(this.detach_Productos_Tienda));
			this._Categorias = default(EntityRef<Categorias>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCategoria", DbType="Int NOT NULL")]
		public int idCategoria
		{
			get
			{
				return this._idCategoria;
			}
			set
			{
				if ((this._idCategoria != value))
				{
					if (this._Categorias.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCategoriaChanging(value);
					this.SendPropertyChanging();
					this._idCategoria = value;
					this.SendPropertyChanged("idCategoria");
					this.OnidCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="NVarChar(50)")]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imagen", DbType="Int")]
		public System.Nullable<int> imagen
		{
			get
			{
				return this._imagen;
			}
			set
			{
				if ((this._imagen != value))
				{
					this.OnimagenChanging(value);
					this.SendPropertyChanging();
					this._imagen = value;
					this.SendPropertyChanged("imagen");
					this.OnimagenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Productos_Productos_Tienda", Storage="_Productos_Tienda", ThisKey="id", OtherKey="idProducto")]
		public EntitySet<Productos_Tienda> Productos_Tienda
		{
			get
			{
				return this._Productos_Tienda;
			}
			set
			{
				this._Productos_Tienda.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categorias_Productos", Storage="_Categorias", ThisKey="idCategoria", OtherKey="id", IsForeignKey=true)]
		public Categorias Categorias
		{
			get
			{
				return this._Categorias.Entity;
			}
			set
			{
				Categorias previousValue = this._Categorias.Entity;
				if (((previousValue != value) 
							|| (this._Categorias.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Categorias.Entity = null;
						previousValue.Productos.Remove(this);
					}
					this._Categorias.Entity = value;
					if ((value != null))
					{
						value.Productos.Add(this);
						this._idCategoria = value.id;
					}
					else
					{
						this._idCategoria = default(int);
					}
					this.SendPropertyChanged("Categorias");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Productos_Tienda(Productos_Tienda entity)
		{
			this.SendPropertyChanging();
			entity.Productos = this;
		}
		
		private void detach_Productos_Tienda(Productos_Tienda entity)
		{
			this.SendPropertyChanging();
			entity.Productos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Productos_Tienda")]
	public partial class Productos_Tienda : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _idTienda;
		
		private System.Nullable<int> _idProducto;
		
		private System.Nullable<int> _stock;
		
		private System.Nullable<double> _precio;
		
		private EntityRef<Productos> _Productos;
		
		private EntityRef<Tiendas> _Tiendas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidTiendaChanging(System.Nullable<int> value);
    partial void OnidTiendaChanged();
    partial void OnidProductoChanging(System.Nullable<int> value);
    partial void OnidProductoChanged();
    partial void OnstockChanging(System.Nullable<int> value);
    partial void OnstockChanged();
    partial void OnprecioChanging(System.Nullable<double> value);
    partial void OnprecioChanged();
    #endregion
		
		public Productos_Tienda()
		{
			this._Productos = default(EntityRef<Productos>);
			this._Tiendas = default(EntityRef<Tiendas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTienda", DbType="Int")]
		public System.Nullable<int> idTienda
		{
			get
			{
				return this._idTienda;
			}
			set
			{
				if ((this._idTienda != value))
				{
					if (this._Tiendas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTiendaChanging(value);
					this.SendPropertyChanging();
					this._idTienda = value;
					this.SendPropertyChanged("idTienda");
					this.OnidTiendaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProducto", DbType="Int")]
		public System.Nullable<int> idProducto
		{
			get
			{
				return this._idProducto;
			}
			set
			{
				if ((this._idProducto != value))
				{
					if (this._Productos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidProductoChanging(value);
					this.SendPropertyChanging();
					this._idProducto = value;
					this.SendPropertyChanged("idProducto");
					this.OnidProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stock", DbType="Int")]
		public System.Nullable<int> stock
		{
			get
			{
				return this._stock;
			}
			set
			{
				if ((this._stock != value))
				{
					this.OnstockChanging(value);
					this.SendPropertyChanging();
					this._stock = value;
					this.SendPropertyChanged("stock");
					this.OnstockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_precio", DbType="Float")]
		public System.Nullable<double> precio
		{
			get
			{
				return this._precio;
			}
			set
			{
				if ((this._precio != value))
				{
					this.OnprecioChanging(value);
					this.SendPropertyChanging();
					this._precio = value;
					this.SendPropertyChanged("precio");
					this.OnprecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Productos_Productos_Tienda", Storage="_Productos", ThisKey="idProducto", OtherKey="id", IsForeignKey=true)]
		public Productos Productos
		{
			get
			{
				return this._Productos.Entity;
			}
			set
			{
				Productos previousValue = this._Productos.Entity;
				if (((previousValue != value) 
							|| (this._Productos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Productos.Entity = null;
						previousValue.Productos_Tienda.Remove(this);
					}
					this._Productos.Entity = value;
					if ((value != null))
					{
						value.Productos_Tienda.Add(this);
						this._idProducto = value.id;
					}
					else
					{
						this._idProducto = default(Nullable<int>);
					}
					this.SendPropertyChanged("Productos");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tiendas_Productos_Tienda", Storage="_Tiendas", ThisKey="idTienda", OtherKey="id", IsForeignKey=true)]
		public Tiendas Tiendas
		{
			get
			{
				return this._Tiendas.Entity;
			}
			set
			{
				Tiendas previousValue = this._Tiendas.Entity;
				if (((previousValue != value) 
							|| (this._Tiendas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tiendas.Entity = null;
						previousValue.Productos_Tienda.Remove(this);
					}
					this._Tiendas.Entity = value;
					if ((value != null))
					{
						value.Productos_Tienda.Add(this);
						this._idTienda = value.id;
					}
					else
					{
						this._idTienda = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tiendas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tiendas")]
	public partial class Tiendas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nombre;
		
		private string _descripcion;
		
		private string _ubicacion;
		
		private EntitySet<Productos_Tienda> _Productos_Tienda;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnubicacionChanging(string value);
    partial void OnubicacionChanged();
    #endregion
		
		public Tiendas()
		{
			this._Productos_Tienda = new EntitySet<Productos_Tienda>(new Action<Productos_Tienda>(this.attach_Productos_Tienda), new Action<Productos_Tienda>(this.detach_Productos_Tienda));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="NVarChar(50)")]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="NVarChar(50)")]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ubicacion", DbType="NVarChar(50)")]
		public string ubicacion
		{
			get
			{
				return this._ubicacion;
			}
			set
			{
				if ((this._ubicacion != value))
				{
					this.OnubicacionChanging(value);
					this.SendPropertyChanging();
					this._ubicacion = value;
					this.SendPropertyChanged("ubicacion");
					this.OnubicacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tiendas_Productos_Tienda", Storage="_Productos_Tienda", ThisKey="id", OtherKey="idTienda")]
		public EntitySet<Productos_Tienda> Productos_Tienda
		{
			get
			{
				return this._Productos_Tienda;
			}
			set
			{
				this._Productos_Tienda.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Productos_Tienda(Productos_Tienda entity)
		{
			this.SendPropertyChanging();
			entity.Tiendas = this;
		}
		
		private void detach_Productos_Tienda(Productos_Tienda entity)
		{
			this.SendPropertyChanging();
			entity.Tiendas = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoUsuarios")]
	public partial class TipoUsuarios : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tipo;
		
		private EntitySet<Usuarios> _Usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntipoChanging(string value);
    partial void OntipoChanged();
    #endregion
		
		public TipoUsuarios()
		{
			this._Usuarios = new EntitySet<Usuarios>(new Action<Usuarios>(this.attach_Usuarios), new Action<Usuarios>(this.detach_Usuarios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipo", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string tipo
		{
			get
			{
				return this._tipo;
			}
			set
			{
				if ((this._tipo != value))
				{
					this.OntipoChanging(value);
					this.SendPropertyChanging();
					this._tipo = value;
					this.SendPropertyChanged("tipo");
					this.OntipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoUsuarios_Usuarios", Storage="_Usuarios", ThisKey="id", OtherKey="idTipoUsuario")]
		public EntitySet<Usuarios> Usuarios
		{
			get
			{
				return this._Usuarios;
			}
			set
			{
				this._Usuarios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuarios(Usuarios entity)
		{
			this.SendPropertyChanging();
			entity.TipoUsuarios = this;
		}
		
		private void detach_Usuarios(Usuarios entity)
		{
			this.SendPropertyChanging();
			entity.TipoUsuarios = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuarios")]
	public partial class Usuarios : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nombre;
		
		private string _usuario;
		
		private string _contraseña;
		
		private System.Nullable<int> _idTipoUsuario;
		
		private System.Nullable<System.DateTime> _fechaCreacion;
		
		private EntitySet<Pedidos> _Pedidos;
		
		private EntitySet<Pedidos> _Pedidos1;
		
		private EntityRef<TipoUsuarios> _TipoUsuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnusuarioChanging(string value);
    partial void OnusuarioChanged();
    partial void OncontraseñaChanging(string value);
    partial void OncontraseñaChanged();
    partial void OnidTipoUsuarioChanging(System.Nullable<int> value);
    partial void OnidTipoUsuarioChanged();
    partial void OnfechaCreacionChanging(System.Nullable<System.DateTime> value);
    partial void OnfechaCreacionChanged();
    #endregion
		
		public Usuarios()
		{
			this._Pedidos = new EntitySet<Pedidos>(new Action<Pedidos>(this.attach_Pedidos), new Action<Pedidos>(this.detach_Pedidos));
			this._Pedidos1 = new EntitySet<Pedidos>(new Action<Pedidos>(this.attach_Pedidos1), new Action<Pedidos>(this.detach_Pedidos1));
			this._TipoUsuarios = default(EntityRef<TipoUsuarios>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="NVarChar(20)")]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usuario", DbType="NVarChar(20)")]
		public string usuario
		{
			get
			{
				return this._usuario;
			}
			set
			{
				if ((this._usuario != value))
				{
					this.OnusuarioChanging(value);
					this.SendPropertyChanging();
					this._usuario = value;
					this.SendPropertyChanged("usuario");
					this.OnusuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contraseña", DbType="NVarChar(20)")]
		public string contraseña
		{
			get
			{
				return this._contraseña;
			}
			set
			{
				if ((this._contraseña != value))
				{
					this.OncontraseñaChanging(value);
					this.SendPropertyChanging();
					this._contraseña = value;
					this.SendPropertyChanged("contraseña");
					this.OncontraseñaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTipoUsuario", DbType="Int")]
		public System.Nullable<int> idTipoUsuario
		{
			get
			{
				return this._idTipoUsuario;
			}
			set
			{
				if ((this._idTipoUsuario != value))
				{
					if (this._TipoUsuarios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTipoUsuarioChanging(value);
					this.SendPropertyChanging();
					this._idTipoUsuario = value;
					this.SendPropertyChanged("idTipoUsuario");
					this.OnidTipoUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechaCreacion", DbType="Date")]
		public System.Nullable<System.DateTime> fechaCreacion
		{
			get
			{
				return this._fechaCreacion;
			}
			set
			{
				if ((this._fechaCreacion != value))
				{
					this.OnfechaCreacionChanging(value);
					this.SendPropertyChanging();
					this._fechaCreacion = value;
					this.SendPropertyChanged("fechaCreacion");
					this.OnfechaCreacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Pedidos", Storage="_Pedidos", ThisKey="id", OtherKey="idCliente")]
		public EntitySet<Pedidos> Pedidos
		{
			get
			{
				return this._Pedidos;
			}
			set
			{
				this._Pedidos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Pedidos1", Storage="_Pedidos1", ThisKey="id", OtherKey="idRepartidor")]
		public EntitySet<Pedidos> Pedidos1
		{
			get
			{
				return this._Pedidos1;
			}
			set
			{
				this._Pedidos1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoUsuarios_Usuarios", Storage="_TipoUsuarios", ThisKey="idTipoUsuario", OtherKey="id", IsForeignKey=true)]
		public TipoUsuarios TipoUsuarios
		{
			get
			{
				return this._TipoUsuarios.Entity;
			}
			set
			{
				TipoUsuarios previousValue = this._TipoUsuarios.Entity;
				if (((previousValue != value) 
							|| (this._TipoUsuarios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoUsuarios.Entity = null;
						previousValue.Usuarios.Remove(this);
					}
					this._TipoUsuarios.Entity = value;
					if ((value != null))
					{
						value.Usuarios.Add(this);
						this._idTipoUsuario = value.id;
					}
					else
					{
						this._idTipoUsuario = default(Nullable<int>);
					}
					this.SendPropertyChanged("TipoUsuarios");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pedidos(Pedidos entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = this;
		}
		
		private void detach_Pedidos(Pedidos entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = null;
		}
		
		private void attach_Pedidos1(Pedidos entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios1 = this;
		}
		
		private void detach_Pedidos1(Pedidos entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios1 = null;
		}
	}
}
#pragma warning restore 1591
